name: Build App and Deploy Workflow
'on':
  workflow_call:
    inputs:
      environment:
        required: true
        type: string
jobs:
  DeployApp:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      id-token: write
    environment: ${{ inputs.environment }}
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Setup Node
        uses: actions/setup-node@v3
        with:
          node-version: 20.x
      - name: Set Yarn cache for app
        uses: actions/cache@v3
        id: app-cache-yarn-cache
        with:
          path: yarn.lock
          key: ${{ runner.os }}-yarn-${{ hashFiles('yarn.lock') }}
          restore-keys: ${{ runner.os }}-yarn-
      - name: Cache node_modules for app
        id: app-cache-node-modules
        uses: actions/cache@v3
        with:
          path: node_modules
          key: >-
            ${{ runner.os }}-${{ matrix.node-version }}-nodemodules-${{
            hashFiles('yarn.lock') }}
          restore-keys: ${{ runner.os }}-${{ matrix.node-version }}-nodemodules-
      - name: Install app dependencies
        if: >-
          steps.app-cache-yarn-cache.outputs.cache-hit != 'true' ||
          steps.app-cache-node-modules.outputs.cache-hit != 'true'
        run: yarn --prefer-offline
      - name: Set Yarn cache for infra
        uses: actions/cache@v3
        id: infra-cache-yarn-cache
        with:
          path: infra/yarn.lock
          key: ${{ runner.os }}-yarn-${{ hashFiles('infra/yarn.lock') }}
          restore-keys: ${{ runner.os }}-yarn-
      - name: Cache node_modules for infra
        id: infra-cache-node-modules
        uses: actions/cache@v3
        with:
          path: infra/node_modules
          key: >-
            ${{ runner.os }}-${{ matrix.node-version }}-nodemodules-${{
            hashFiles('infra/yarn.lock') }}
          restore-keys: ${{ runner.os }}-${{ matrix.node-version }}-nodemodules-
      - name: Install infra dependencies
        if: >-
          steps.infra-cache-yarn-cache.outputs.cache-hit != 'true' ||
          steps.infra-cache-node-modules.outputs.cache-hit != 'true'
        run: yarn --prefer-offline
        working-directory: ./infra
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          role-to-assume: arn:aws:iam::${{ vars.US_AWS_ACCOUNT_NUMBER }}:role/GitHub-OCID
          role-duration-seconds: 900
          aws-region: ${{ vars.US_AWS_REGION }}
      - name: Build app
        run: yarn build
      - name: Deploy and Synth
        run: |-
          npx cdk synth
          npx cdk deploy --require-approval never
        env:
          CDK_DEFAULT_ACCOUNT: ${{ vars.US_AWS_ACCOUNT_NUMBER }}
          AWS_DEFAULT_REGION: ${{ vars.US_AWS_REGION }}
          DEPLOYED_BY: github.actions
          DEPLOYMENT_ENV: ci
          STAGE: ${{ vars.STAGE }}
        working-directory: ./infra
